<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gpnusz.ucloudteach.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="cn.gpnusz.ucloudteach.entity.Course">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="subject_id" jdbcType="BIGINT" property="subjectId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="certificate" jdbcType="VARCHAR" property="certificate" />
    <result column="send_word" jdbcType="VARCHAR" property="sendWord" />
    <result column="total_member" jdbcType="INTEGER" property="totalMember" />
    <result column="total_section" jdbcType="INTEGER" property="totalSection" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="total_period" jdbcType="INTEGER" property="totalPeriod" />
    <result column="price" jdbcType="DECIMAL" property="price" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gpnusz.ucloudteach.entity.Course">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, cover, teacher, subject_id, sort, `status`, certificate, send_word, total_member, 
    total_section, create_time, total_period, price
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gpnusz.ucloudteach.entity.CourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gpnusz.ucloudteach.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.gpnusz.ucloudteach.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gpnusz.ucloudteach.entity.Course">
    insert into course (id, `name`, cover, 
      teacher, subject_id, sort, 
      `status`, certificate, send_word, 
      total_member, total_section, create_time, 
      total_period, price, description
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{teacher,jdbcType=VARCHAR}, #{subjectId,jdbcType=BIGINT}, #{sort,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{certificate,jdbcType=VARCHAR}, #{sendWord,jdbcType=VARCHAR}, 
      #{totalMember,jdbcType=INTEGER}, #{totalSection,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{totalPeriod,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gpnusz.ucloudteach.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="certificate != null">
        certificate,
      </if>
      <if test="sendWord != null">
        send_word,
      </if>
      <if test="totalMember != null">
        total_member,
      </if>
      <if test="totalSection != null">
        total_section,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="totalPeriod != null">
        total_period,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="certificate != null">
        #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="sendWord != null">
        #{sendWord,jdbcType=VARCHAR},
      </if>
      <if test="totalMember != null">
        #{totalMember,jdbcType=INTEGER},
      </if>
      <if test="totalSection != null">
        #{totalSection,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalPeriod != null">
        #{totalPeriod,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gpnusz.ucloudteach.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.certificate != null">
        certificate = #{record.certificate,jdbcType=VARCHAR},
      </if>
      <if test="record.sendWord != null">
        send_word = #{record.sendWord,jdbcType=VARCHAR},
      </if>
      <if test="record.totalMember != null">
        total_member = #{record.totalMember,jdbcType=INTEGER},
      </if>
      <if test="record.totalSection != null">
        total_section = #{record.totalSection,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalPeriod != null">
        total_period = #{record.totalPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update course
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      sort = #{record.sort,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      send_word = #{record.sendWord,jdbcType=VARCHAR},
      total_member = #{record.totalMember,jdbcType=INTEGER},
      total_section = #{record.totalSection,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      total_period = #{record.totalPeriod,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      sort = #{record.sort,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      send_word = #{record.sendWord,jdbcType=VARCHAR},
      total_member = #{record.totalMember,jdbcType=INTEGER},
      total_section = #{record.totalSection,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      total_period = #{record.totalPeriod,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>