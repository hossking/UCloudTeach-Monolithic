<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gpnusz.ucloudteach.mapper.CourseCommentMapper">
  <resultMap id="BaseResultMap" type="cn.gpnusz.ucloudteach.entity.CourseComment">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="reply_id" jdbcType="BIGINT" property="replyId" />
    <result column="top_flag" jdbcType="BIT" property="topFlag" />
    <result column="elite_flag" jdbcType="BIT" property="eliteFlag" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gpnusz.ucloudteach.entity.CourseComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, course_id, student_id, reply_id, top_flag, elite_flag, create_date, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gpnusz.ucloudteach.entity.CourseCommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gpnusz.ucloudteach.entity.CourseCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.gpnusz.ucloudteach.entity.CourseCommentExample">
    delete from course_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gpnusz.ucloudteach.entity.CourseComment">
    insert into course_comment (id, course_id, student_id, 
      reply_id, top_flag, elite_flag, 
      create_date, create_time, content
      )
    values (#{id,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, 
      #{replyId,jdbcType=BIGINT}, #{topFlag,jdbcType=BIT}, #{eliteFlag,jdbcType=BIT}, 
      #{createDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gpnusz.ucloudteach.entity.CourseComment">
    insert into course_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="topFlag != null">
        top_flag,
      </if>
      <if test="eliteFlag != null">
        elite_flag,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=BIGINT},
      </if>
      <if test="topFlag != null">
        #{topFlag,jdbcType=BIT},
      </if>
      <if test="eliteFlag != null">
        #{eliteFlag,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gpnusz.ucloudteach.entity.CourseCommentExample" resultType="java.lang.Long">
    select count(*) from course_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.replyId != null">
        reply_id = #{record.replyId,jdbcType=BIGINT},
      </if>
      <if test="record.topFlag != null">
        top_flag = #{record.topFlag,jdbcType=BIT},
      </if>
      <if test="record.eliteFlag != null">
        elite_flag = #{record.eliteFlag,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update course_comment
    set id = #{record.id,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      reply_id = #{record.replyId,jdbcType=BIGINT},
      top_flag = #{record.topFlag,jdbcType=BIT},
      elite_flag = #{record.eliteFlag,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_comment
    set id = #{record.id,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      reply_id = #{record.replyId,jdbcType=BIGINT},
      top_flag = #{record.topFlag,jdbcType=BIT},
      elite_flag = #{record.eliteFlag,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>