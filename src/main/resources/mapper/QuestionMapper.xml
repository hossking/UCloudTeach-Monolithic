<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gpnusz.ucloudteach.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="cn.gpnusz.ucloudteach.entity.Question">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="subject_id" jdbcType="BIGINT" property="subjectId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="section_id" jdbcType="BIGINT" property="sectionId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gpnusz.ucloudteach.entity.Question">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="options" jdbcType="LONGVARCHAR" property="options" />
    <result column="answer_text" jdbcType="LONGVARCHAR" property="answerText" />
    <result column="answer_option" jdbcType="LONGVARCHAR" property="answerOption" />
    <result column="analysis" jdbcType="LONGVARCHAR" property="analysis" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, subject_id, course_id, section_id, `type`, create_time
  </sql>
  <sql id="Blob_Column_List">
    content, `options`, answer_text, answer_option, analysis
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gpnusz.ucloudteach.entity.QuestionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gpnusz.ucloudteach.entity.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.gpnusz.ucloudteach.entity.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gpnusz.ucloudteach.entity.Question">
    insert into question (id, subject_id, course_id, 
      section_id, `type`, create_time, 
      content, `options`, answer_text, 
      answer_option, analysis)
    values (#{id,jdbcType=BIGINT}, #{subjectId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, 
      #{sectionId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR}, #{options,jdbcType=LONGVARCHAR}, #{answerText,jdbcType=LONGVARCHAR}, 
      #{answerOption,jdbcType=LONGVARCHAR}, #{analysis,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gpnusz.ucloudteach.entity.Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="sectionId != null">
        section_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="options != null">
        `options`,
      </if>
      <if test="answerText != null">
        answer_text,
      </if>
      <if test="answerOption != null">
        answer_option,
      </if>
      <if test="analysis != null">
        analysis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="options != null">
        #{options,jdbcType=LONGVARCHAR},
      </if>
      <if test="answerText != null">
        #{answerText,jdbcType=LONGVARCHAR},
      </if>
      <if test="answerOption != null">
        #{answerOption,jdbcType=LONGVARCHAR},
      </if>
      <if test="analysis != null">
        #{analysis,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gpnusz.ucloudteach.entity.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.sectionId != null">
        section_id = #{record.sectionId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.options != null">
        `options` = #{record.options,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.answerText != null">
        answer_text = #{record.answerText,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.answerOption != null">
        answer_option = #{record.answerOption,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.analysis != null">
        analysis = #{record.analysis,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update question
    set id = #{record.id,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      section_id = #{record.sectionId,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR},
      `options` = #{record.options,jdbcType=LONGVARCHAR},
      answer_text = #{record.answerText,jdbcType=LONGVARCHAR},
      answer_option = #{record.answerOption,jdbcType=LONGVARCHAR},
      analysis = #{record.analysis,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set id = #{record.id,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      section_id = #{record.sectionId,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>