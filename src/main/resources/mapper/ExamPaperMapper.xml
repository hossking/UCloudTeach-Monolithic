<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gpnusz.ucloudteach.mapper.ExamPaperMapper">
  <resultMap id="BaseResultMap" type="cn.gpnusz.ucloudteach.entity.ExamPaper">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="subject_id" jdbcType="BIGINT" property="subjectId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="join_count" jdbcType="INTEGER" property="joinCount" />
    <result column="exam_time" jdbcType="INTEGER" property="examTime" />
    <result column="check_count" jdbcType="INTEGER" property="checkCount" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="question_count" jdbcType="INTEGER" property="questionCount" />
    <result column="auto_check" jdbcType="BIT" property="autoCheck" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pass_score" jdbcType="INTEGER" property="passScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, total_score, subject_id, course_id, sort, join_count, exam_time, check_count, 
    `status`, question_count, auto_check, remark, start_date, end_date, create_time, 
    pass_score
  </sql>
  <select id="selectByExample" parameterType="cn.gpnusz.ucloudteach.entity.ExamPaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.gpnusz.ucloudteach.entity.ExamPaperExample">
    delete from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gpnusz.ucloudteach.entity.ExamPaper">
    insert into exam_paper (id, `name`, total_score, 
      subject_id, course_id, sort, 
      join_count, exam_time, check_count, 
      `status`, question_count, auto_check, 
      remark, start_date, end_date, 
      create_time, pass_score)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER}, 
      #{subjectId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{sort,jdbcType=INTEGER}, 
      #{joinCount,jdbcType=INTEGER}, #{examTime,jdbcType=INTEGER}, #{checkCount,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{questionCount,jdbcType=INTEGER}, #{autoCheck,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{passScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.gpnusz.ucloudteach.entity.ExamPaper">
    insert into exam_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="joinCount != null">
        join_count,
      </if>
      <if test="examTime != null">
        exam_time,
      </if>
      <if test="checkCount != null">
        check_count,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="questionCount != null">
        question_count,
      </if>
      <if test="autoCheck != null">
        auto_check,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="passScore != null">
        pass_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="joinCount != null">
        #{joinCount,jdbcType=INTEGER},
      </if>
      <if test="examTime != null">
        #{examTime,jdbcType=INTEGER},
      </if>
      <if test="checkCount != null">
        #{checkCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="questionCount != null">
        #{questionCount,jdbcType=INTEGER},
      </if>
      <if test="autoCheck != null">
        #{autoCheck,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passScore != null">
        #{passScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gpnusz.ucloudteach.entity.ExamPaperExample" resultType="java.lang.Long">
    select count(*) from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_paper
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.joinCount != null">
        join_count = #{record.joinCount,jdbcType=INTEGER},
      </if>
      <if test="record.examTime != null">
        exam_time = #{record.examTime,jdbcType=INTEGER},
      </if>
      <if test="record.checkCount != null">
        check_count = #{record.checkCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.questionCount != null">
        question_count = #{record.questionCount,jdbcType=INTEGER},
      </if>
      <if test="record.autoCheck != null">
        auto_check = #{record.autoCheck,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passScore != null">
        pass_score = #{record.passScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_paper
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      total_score = #{record.totalScore,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      sort = #{record.sort,jdbcType=INTEGER},
      join_count = #{record.joinCount,jdbcType=INTEGER},
      exam_time = #{record.examTime,jdbcType=INTEGER},
      check_count = #{record.checkCount,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT},
      question_count = #{record.questionCount,jdbcType=INTEGER},
      auto_check = #{record.autoCheck,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pass_score = #{record.passScore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>